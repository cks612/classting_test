{"version":3,"file":"static/js/124.24c1dd9a.chunk.js","mappings":"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","sources":["utils/axios-utils.ts","hooks/useCustomerHooks.ts","utils/fysOriginal.ts","styles/_SelectorsBoxStyles.ts","components/SelectorsBox/SelectorsBox.tsx","components/Skeleton/SponsoredSkeleton.tsx","styles/_ResultModalStyles.ts","hooks/useLockBodyScroll.ts","components/Chart/Chart.tsx","components/ResultModal/ResultModal.tsx","styles/_QuizPageStyles.ts","pages/Quiz/index.tsx","styles/_CommonCssStyles.ts","styles/_MediaQueryStyles.tsx"],"sourcesContent":["import axios from \"axios\";\n\n// baseURL : env파일로 바꿀 수 있다.\nconst client = axios.create({\n  baseURL: \"https://opentdb.com\",\n});\n\nexport const request = ({ ...options }) => {\n  const onSuccess = (response: any) => response;\n  const onError = (error: Error) => {\n    return error;\n  };\n  return client(options).then(onSuccess).catch(onError);\n};\n","import { request } from \"../utils/axios-utils\";\nimport { useQuery } from \"@tanstack/react-query\";\n\nconst fetchQuizData = () => {\n  return request({ url: \"/api.php?amount=10&type=multiple\" });\n};\n\nexport const useGetQuizData = (onSuccess: any, onError: any) => {\n  return useQuery([\"quizData\"], fetchQuizData, {\n    onSuccess,\n    onError,\n    enabled: false,\n  });\n};\n","const fysOriginal = (arr: string[]) => {\n  let roll = Math.floor(Math.random() * arr.length);\n\n  const strikeOut = [];\n  while (arr.length) {\n    strikeOut.push(arr.splice(roll, 1)[0]);\n    roll += 1;\n\n    if (roll >= arr.length) roll = 0;\n  }\n  return strikeOut;\n};\n\nexport default fysOriginal;\n","import * as S from \"../styles/_CommonCssStyles\";\nimport styled, { css } from \"styled-components\";\nimport { Props } from \"../types\";\n\nexport const Questions = styled.button<Props>`\n  ${S.commonDisplay}\n  ${S.commonH1Tag}\n  border: 1px solid ${({ theme }) => theme.whiteColor};\n  border-radius: 10px;\n  background: transparent;\n  cursor: pointer;\n\n  ${({ resultStyle }) => {\n    if (resultStyle === \"정답\") {\n      return css`\n        border: 1px solid lightgreen;\n        background: lightgreen;\n      `;\n    } else if (resultStyle === \"오답\") {\n      return css`\n        border: 1px solid red;\n        background: red;\n      `;\n    } else {\n      return css`\n        border: 1px solid ${({ theme }) => theme.whiteColor};\n      `;\n    }\n  }}\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: auto;\n  }\n`;\n","import React, { ReactEventHandler } from \"react\";\nimport * as S from \"../../styles/_SelectorsBoxStyles\";\n\nconst SelectorsBox = ({\n  selector,\n  submitAnswersHandler,\n  isCorrect,\n  isSelected,\n}: {\n  selector: string;\n  submitAnswersHandler: ReactEventHandler;\n  isCorrect: boolean;\n  isSelected: string | boolean;\n}): JSX.Element => {\n  const changeStyle = (): string => {\n    const userClcik: boolean = selector === isSelected;\n\n    if (isCorrect && userClcik) {\n      return \"정답\";\n    } else if (!isCorrect && userClcik) {\n      return \"오답\";\n    } else {\n      return \"\";\n    }\n  };\n  return (\n    <S.Questions\n      onClick={submitAnswersHandler}\n      isCorrect={isCorrect}\n      resultStyle={changeStyle()}\n      disabled={Boolean(isSelected)}\n    >\n      {selector}\n    </S.Questions>\n  );\n};\n\nexport default SelectorsBox;\n","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\n\nconst SponsoredSkeleton = function () {\n  return (\n    <>\n      <ContentLoader\n        width={900}\n        height={500}\n        speed={2}\n        viewBox=\"0 0 900 600\"\n        backgroundColor=\"#d9d7d7\"\n        foregroundColor=\"#f3f3f3\"\n      >\n        <rect x=\"0\" y=\"15\" rx=\"5\" ry=\"5\" width=\"200\" height=\"20\" />\n        <rect x=\"220\" y=\"15\" rx=\"5\" ry=\"5\" width=\"100\" height=\"20\" />\n        <rect x=\"0\" y=\"70\" rx=\"15\" ry=\"15\" width=\"900\" height=\"170\" />\n        <rect x=\"0\" y=\"310\" rx=\"12\" ry=\"12\" width=\"430\" height=\"80\" />\n        <rect x=\"480\" y=\"310\" rx=\"12\" ry=\"12\" width=\"420\" height=\"80\" />\n        <rect x=\"0\" y=\"430\" rx=\"12\" ry=\"12\" width=\"430\" height=\"80\" />\n        <rect x=\"480\" y=\"430\" rx=\"12\" ry=\"12\" width=\"420\" height=\"80\" />\n      </ContentLoader>\n    </>\n  );\n};\n\nexport default SponsoredSkeleton;\n","import * as S from \"../styles/_CommonCssStyles\";\nimport styled from \"styled-components\";\nimport { devices } from \"./_MediaQueryStyles\";\n\nexport const HideScreen = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1000;\n  opacity: 1;\n`;\n\nexport const ResultModalWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 150%;\n  border: 1px solid ${({ theme }) => theme.whiteColor};\n  background: ${({ theme }) => theme.backGroundColor};\n  font-size: 50px;\n  z-index: 1001;\n\n  hr {\n    width: 80%;\n    padding: 0 20px;\n  }\n`;\n\nexport const ResultTitle = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding: 30px 20px;\n  font-size: 1em;\n  font-weight: 900;\n  color: ${({ theme }) => theme.whiteColor};\n  gap: 10px;\n\n  p {\n    font-size: 0.3em;\n    font-weight: 500;\n  }\n\n  @media ${devices.laptopL} {\n    /* font-size: 0.5em; */\n  }\n`;\n\nexport const ResultSummery = styled.div`\n  ${S.commonDisplay}\n  height: 20%;\n  padding: 10px 20px;\n  font-size: 1em;\n  font-weight: 500;\n  color: ${({ theme }) => theme.whiteColor};\n\n  @media ${devices.laptopL} {\n    justify-content: stretch;\n  }\n`;\n\nexport const ResultRatio = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  flex: 0 0 50%;\n  gap: 10px;\n\n  p {\n    font-size: 0.3em;\n  }\n  @media ${devices.tablet} {\n    flex: 0 0 100%;\n  }\n`;\n\nexport const VLine = styled.div`\n  border-left: 1px solid ${({ theme }) => theme.whiteColor};\n  height: 50%;\n\n  @media ${devices.tablet} {\n    display: none;\n  }\n`;\n\nexport const ResultAnswersContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  flex: 0 0 50%;\n  font-size: 0.5em;\n\n  @media ${devices.tablet} {\n    flex: 0 0 0%;\n  }\n`;\nexport const ResultAnswersContent = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n\n  i {\n    padding-right: 20px;\n  }\n\n  @media ${devices.tablet} {\n    display: none;\n  }\n`;\n\nexport const BottomResultContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0px 40px;\n`;\n\nexport const ResultChart = styled.div`\n  display: flex;\n  flex: 0 0 50%;\n  width: 450px;\n  height: 300px;\n\n  @media ${devices.tablet} {\n    flex: 0 0 100%;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  flex: 0 0 50%;\n  text-align: center;\n  gap: 50px;\n\n  button {\n    width: 10em;\n    height: 3em;\n    border: 2px solid ${({ theme }) => theme.whiteColor};\n    color: ${({ theme }) => theme.whiteColor};\n    background: ${({ theme }) => theme.backGroundColor};\n    font-size: 15px;\n    font-weight: 900;\n    cursor: pointer;\n\n    &:hover {\n      background: ${({ theme }) => theme.grayColor};\n    }\n\n    @media ${devices.tablet} {\n      display: none;\n    }\n  }\n`;\n","import { useLayoutEffect } from \"react\";\n\nconst useLockBodyScroll = (): void => {\n  useLayoutEffect(() => {\n    document.body.style.overflow = \"hidden\";\n    return () => {\n      document.body.style.overflow = \"\";\n    };\n  }, []);\n};\nexport default useLockBodyScroll;\n","import { ResponsivePie } from \"@nivo/pie\";\nimport { ChartType } from \"../../types\";\n\nexport const MyResponsivePie = ({ data }: { data: ChartType[] }) => (\n  <ResponsivePie\n    data={data}\n    margin={{ top: 20, right: 80, bottom: 80, left: 80 }}\n    startAngle={-2}\n    innerRadius={0.5}\n    padAngle={0.7}\n    cornerRadius={3}\n    activeOuterRadiusOffset={8}\n    borderWidth={2}\n    borderColor={{\n      from: \"color\",\n      modifiers: [[\"darker\", 0.5]],\n    }}\n    arcLinkLabelsSkipAngle={10}\n    arcLinkLabelsTextColor=\"#ffffff\"\n    arcLinkLabelsThickness={2}\n    arcLinkLabelsColor={{ from: \"color\" }}\n    arcLabelsSkipAngle={10}\n    arcLabelsTextColor={{\n      from: \"color\",\n      modifiers: [[\"darker\", 2]],\n    }}\n    defs={[\n      {\n        id: \"lines\",\n        type: \"patternLines\",\n        background: \"inherit\",\n        color: \"rgba(255, 255, 255, 0.3)\",\n        rotation: -45,\n        lineWidth: 6,\n        spacing: 10,\n      },\n    ]}\n    fill={[\n      {\n        match: {\n          id: \"정답\",\n        },\n        id: \"lines\",\n      },\n      {\n        match: {\n          id: \"오답\",\n        },\n        id: \"lines\",\n      },\n    ]}\n    legends={[\n      {\n        anchor: \"bottom\",\n        direction: \"row\",\n        justify: false,\n        translateX: 30,\n        translateY: 45,\n        itemsSpacing: 0,\n        itemWidth: 100,\n        itemHeight: 18,\n        itemTextColor: \"#fff\",\n        itemDirection: \"left-to-right\",\n        itemOpacity: 1,\n        symbolSize: 18,\n        symbolShape: \"circle\",\n        effects: [\n          {\n            on: \"hover\",\n            style: {\n              itemTextColor: \"#000\",\n            },\n          },\n        ],\n      },\n    ]}\n  />\n);\n","import React, { ReactEventHandler, useEffect, useState } from \"react\";\nimport * as S from \"../../styles/_ResultModalStyles\";\nimport useLockBodyScroll from \"../../hooks/useLockBodyScroll\";\nimport { MyResponsivePie } from \"../Chart/Chart\";\nimport { ButtonType, ChartType } from \"../../types\";\n\nconst buttonData: ButtonType[] = [\n  {\n    id: 1,\n    data: \"다시 풀기\",\n  },\n  { id: 2, data: \"새 문제 다시 풀기\" },\n  { id: 3, data: \"메인화면\" },\n];\n\nconst ResultModal = ({\n  nextStepHandler,\n}: {\n  nextStepHandler: ReactEventHandler;\n}) => {\n  const [calculateTime, setCalculateTime] = useState(\"\");\n\n  const correctAnswer: number = parseInt(\n    localStorage.getItem(\"CorrecAnswer\") || \"\"\n  );\n\n  const wrongAnswer: number = parseInt(\n    localStorage.getItem(\"WrongAnswer\") || \"\"\n  );\n\n  const data: ChartType[] = [\n    {\n      id: \"정답\",\n      label: \"정답\",\n      value: correctAnswer,\n      color: \"hsl(89, 70%, 50%)\",\n    },\n    {\n      id: \"오답\",\n      label: \"오답\",\n      value: wrongAnswer,\n      color: \"hsl(320, 70%, 50%)\",\n    },\n  ];\n  const elapsedTime = () => {\n    const endTime: Date = new Date();\n    const startTime: Date = new Date(\n      JSON.parse(localStorage.getItem(\"startTime\") || \"\")\n    );\n\n    let interval = endTime.getTime() - startTime.getTime();\n\n    const diffHours = Math.floor(interval / (1000 * 60 * 60));\n    interval = interval - diffHours * (1000 * 60 * 60);\n\n    const diffMinutes = Math.floor(interval / (1000 * 60));\n    interval = interval - diffMinutes * (1000 * 60);\n\n    const diffSeconds = Math.floor(interval / 1000);\n\n    const elapsedText = ` ${diffMinutes}분 ${diffSeconds}초`;\n\n    return elapsedText;\n  };\n\n  useEffect(() => {\n    setCalculateTime(elapsedTime());\n  }, []);\n\n  const correctRatio = Math.floor(\n    (correctAnswer / (correctAnswer + wrongAnswer)) * 100\n  );\n\n  return (\n    <>\n      <S.HideScreen />\n      <S.ResultModalWrapper>\n        <S.ResultTitle>\n          Quiz Summery\n          <p>총 소요시간 : {calculateTime}</p>\n        </S.ResultTitle>\n        <S.ResultSummery>\n          <S.ResultRatio>\n            <h2>{correctRatio}%</h2>\n            <p>Practice Makes Perfect!</p>\n          </S.ResultRatio>\n          <S.VLine />\n          <S.ResultAnswersContainer>\n            <S.ResultAnswersContent>\n              <p>\n                <i className=\"fa-solid fa-circle-check\"></i>\n                {correctAnswer} correct\n              </p>\n              <p>\n                <i className=\"fa-solid fa-circle-xmark\"></i>\n                {wrongAnswer} to work on\n              </p>\n            </S.ResultAnswersContent>\n          </S.ResultAnswersContainer>\n        </S.ResultSummery>\n        <hr />\n        <S.BottomResultContainer>\n          <S.ResultChart>\n            <MyResponsivePie data={data} />\n          </S.ResultChart>\n          <S.ButtonContainer>\n            {buttonData?.map((data) => {\n              return (\n                <button key={data.id} value={data.id} onClick={nextStepHandler}>\n                  {data.data}\n                </button>\n              );\n            })}\n          </S.ButtonContainer>\n        </S.BottomResultContainer>\n      </S.ResultModalWrapper>\n      {useLockBodyScroll};\n    </>\n  );\n};\nexport default ResultModal;\n","import * as S from \"../styles/_CommonCssStyles\";\nimport styled from \"styled-components\";\n\nexport const QuizPageWrapper = styled.div`\n  ${S.commonDisplay}\n  width: 100%;\n  height: 100vh;\n  background: ${({ theme }) => theme.backGroundColor};\n`;\n\nexport const QuestionsContainer = styled.div`\n  ${S.commonDisplay}\n  flex-wrap:wrap;\n  position: relative;\n  max-width: 50%;\n  margin: 0 auto;\n  gap: 3em;\n`;\n\nexport const Questions = styled.h1`\n  ${S.commonDisplay}\n  ${S.commonH1Tag}\n  width: 100%;\n  top: 10em;\n  height: 6em;\n  padding: 20px 20px;\n  border-radius: 15px;\n\n  p {\n    position: absolute;\n    left: 0;\n    top: -50px;\n    font-size: 2em;\n  }\n`;\n\nexport const SelectorsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  width: 100%;\n  gap: 30px;\n`;\n\nexport const NextButton = styled.div`\n  ${S.commonDisplay}\n  position: absolute;\n  width: 100%;\n  height: 60px;\n  bottom: -100px;\n  border: 0.5px solid ${({ theme }) => theme.whiteColor};\n  border-radius: 10px;\n  font-weight: 500;\n  color: white;\n  cursor: pointer;\n\n  &:hover {\n    background: #fff3;\n  }\n`;\n\nexport const StartButton = styled.button`\n  ${S.commonDisplay}\n  flex-direction: column;\n  width: 200px;\n  height: 100px;\n  border: 3px solid #fff;\n  border-radius: 20px;\n  background: ${({ theme }) => theme.backGroundColor};\n  color: #fff;\n  font-size: 1.5em;\n  font-weight: 500;\n  cursor: pointer;\n  animation: buttonAnimate 4s infinite;\n\n  @keyframes buttonAnimate {\n    5%,\n    50% {\n      transform: scale(1);\n    }\n\n    10% {\n      transform: scale(0.9);\n    }\n\n    15% {\n      transform: scale(1.15);\n    }\n\n    20% {\n      transform: scale(1.15) rotate(-5deg);\n    }\n\n    25% {\n      transform: scale(1.15) rotate(5deg);\n    }\n\n    30% {\n      transform: scale(1.15) rotate(-3deg);\n    }\n\n    35% {\n      transform: scale(1.15) rotate(2deg);\n    }\n\n    40% {\n      transform: scale(1.15) rotate(0);\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UseQueryResult } from \"@tanstack/react-query\";\nimport { useGetQuizData } from \"../../hooks/useCustomerHooks\";\nimport { elementType, queryDataType } from \"../../types\";\nimport fysOriginal from \"../../utils/fysOriginal\";\nimport SelectorsBox from \"../../components/SelectorsBox/SelectorsBox\";\nimport SponsoredSkeleton from \"../../components/Skeleton/SponsoredSkeleton\";\nimport ResultModal from \"../../components/ResultModal/ResultModal\";\nimport * as S from \"../../styles/_QuizPageStyles\";\n\nconst Quiz: React.FC = () => {\n  const [quizData, setQuizData] = useState<elementType[]>([]);\n  const [questionCount, setQuestionCount] = useState(0);\n  const [randomSelectors, setRandomSelectors] = useState<string[]>([]);\n  const [isSelected, setIsSelected] = useState(\"\");\n  const [isModalOn, setIsModalOn] = useState(false);\n  const [correctAnswer, setCorrectAnswer] = useState(0);\n  const [wrongAnswer, setWrongAnswer] = useState(0);\n  const navigate = useNavigate();\n  const startTime: Date = new Date();\n  const uuid = require(\"react-uuid\");\n  const skeletonArr: number[] = [1];\n\n  const onSuccess = (data: queryDataType): void => {\n    console.log(\"====\", data);\n    setQuizData(data.data.results);\n  };\n\n  const onError = (error: Error): void => {\n    console.log(\"====\", error);\n  };\n\n  const { isFetching, data, refetch }: UseQueryResult<queryDataType> =\n    useGetQuizData(onSuccess, onError);\n\n  const fetchDataQueryHandler = () => {\n    localStorage.setItem(\"startTime\", JSON.stringify(startTime) || \"\");\n    refetch();\n  };\n\n  const submitAnswersHandler = (e: React.MouseEvent<HTMLTextAreaElement>) => {\n    const { innerText } = e.target as HTMLButtonElement;\n\n    if (quizData[questionCount].correct_answer === innerText) {\n      setCorrectAnswer(correctAnswer + 1);\n    } else if (quizData[questionCount].correct_answer !== innerText) {\n      setWrongAnswer(wrongAnswer + 1);\n    }\n    setIsSelected(innerText);\n  };\n\n  const nextQuestionHandler = () => {\n    if (questionCount === quizData.length - 1) {\n      localStorage.setItem(\"CorrecAnswer\", JSON.stringify(correctAnswer));\n      localStorage.setItem(\"WrongAnswer\", JSON.stringify(wrongAnswer));\n      alert(\"퀴즈가 끝났습니다!\");\n      setIsModalOn(!isModalOn);\n    } else {\n      setIsSelected(\"\");\n      setQuestionCount(questionCount + 1);\n    }\n  };\n\n  const nextStepHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const { value }: { value: number | string } = e.target as HTMLButtonElement;\n    localStorage.clear();\n\n    if (parseInt(value) === 1) {\n      localStorage.setItem(\"startTime\", JSON.stringify(startTime) || \"\");\n      setQuestionCount(0);\n      setIsSelected(\"\");\n      setCorrectAnswer(0);\n      setWrongAnswer(0);\n      setIsModalOn(!isModalOn);\n    } else if (parseInt(value) === 2) {\n      setQuestionCount(0);\n      setCorrectAnswer(0);\n      setWrongAnswer(0);\n      setIsSelected(\"\");\n      setIsModalOn(!isModalOn);\n      fetchDataQueryHandler();\n    } else {\n      setQuizData([]);\n      setQuestionCount(0);\n      setIsSelected(\"\");\n      setCorrectAnswer(0);\n      setWrongAnswer(0);\n      navigate(\"/\");\n    }\n  };\n\n  useEffect(() => {\n    if (quizData.length) {\n      quizData.map(\n        (el: elementType) =>\n          (el.selectors = el.incorrect_answers.concat(el.correct_answer))\n      );\n      setRandomSelectors(fysOriginal(quizData[questionCount].selectors));\n    }\n  }, [quizData, questionCount]);\n\n  return (\n    <>\n      <S.QuizPageWrapper>\n        <S.QuestionsContainer>\n          {isFetching ? (\n            skeletonArr?.map(() => <SponsoredSkeleton key={uuid()} />)\n          ) : data ? (\n            \" \"\n          ) : (\n            <S.StartButton onClick={fetchDataQueryHandler}>\n              준비되셨나요?<p>시작하기</p>\n            </S.StartButton>\n          )}\n\n          {data && (\n            <>\n              <S.Questions>\n                <p>{questionCount + 1} / 10</p>\n                {quizData[questionCount].question}\n              </S.Questions>\n              <S.SelectorsContainer>\n                {randomSelectors?.map((selector, index) => {\n                  const isCorrect =\n                    selector === quizData[questionCount].correct_answer;\n                  return (\n                    <SelectorsBox\n                      key={index}\n                      submitAnswersHandler={submitAnswersHandler}\n                      selector={selector}\n                      isCorrect={isCorrect}\n                      isSelected={isSelected}\n                    ></SelectorsBox>\n                  );\n                })}\n              </S.SelectorsContainer>\n            </>\n          )}\n          {isSelected && (\n            <S.NextButton onClick={nextQuestionHandler}>NEXT &gt;</S.NextButton>\n          )}\n          {isModalOn && <ResultModal nextStepHandler={nextStepHandler} />}\n        </S.QuestionsContainer>\n      </S.QuizPageWrapper>\n    </>\n  );\n};\n\nexport default Quiz;\n","import { css } from \"styled-components\";\n// common CSS\nexport const display = css`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const commonDisplay = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const commonH1Tag = css`\n  width: 100%;\n  height: 3em;\n  font-size: 1.5em;\n  font-weight: 900;\n  text-align: center;\n  color: ${({ theme }) => theme.whiteColor};\n  box-shadow: 0 0 100px #fff; ;\n`;\n","const sizes = {\n  mobileS: \"320px\",\n  mobileM: \"375px\",\n  mobileL: \"425px\",\n  tablet: \"768px\",\n  laptop: \"1024px\",\n  laptopL: \"1440px\",\n  desktop: \"2560px\",\n};\n\nexport const devices = {\n  mobileS: `(max-width: ${sizes.mobileS})`,\n  mobileM: `(max-width: ${sizes.mobileM})`,\n  mobileL: `(max-width: ${sizes.mobileL})`,\n  tablet: `(max-width: ${sizes.tablet})`,\n  laptop: `(max-width: ${sizes.laptop})`,\n  laptopL: `(max-width: ${sizes.laptopL})`,\n  desktop: `(max-width: ${sizes.desktop})`,\n};\n"],"names":["client","axios","baseURL","fetchQuizData","options","then","response","catch","error","request","url","arr","roll","Math","floor","random","length","strikeOut","push","splice","Questions","styled","S","theme","whiteColor","resultStyle","css","selector","submitAnswersHandler","isCorrect","isSelected","onClick","userClcik","changeStyle","disabled","Boolean","width","height","speed","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","HideScreen","ResultModalWrapper","backGroundColor","ResultTitle","devices","ResultSummery","ResultRatio","VLine","ResultAnswersContainer","ResultAnswersContent","BottomResultContainer","ResultChart","ButtonContainer","grayColor","useLayoutEffect","document","body","style","overflow","MyResponsivePie","data","margin","top","right","bottom","left","startAngle","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","borderWidth","borderColor","from","modifiers","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","defs","id","type","background","color","rotation","lineWidth","spacing","fill","match","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape","effects","on","buttonData","nextStepHandler","useState","calculateTime","setCalculateTime","correctAnswer","parseInt","localStorage","getItem","wrongAnswer","label","value","useEffect","endTime","Date","startTime","JSON","parse","interval","getTime","diffMinutes","diffSeconds","elapsedTime","correctRatio","className","map","useLockBodyScroll","QuizPageWrapper","QuestionsContainer","SelectorsContainer","NextButton","StartButton","quizData","setQuizData","questionCount","setQuestionCount","randomSelectors","setRandomSelectors","setIsSelected","isModalOn","setIsModalOn","setCorrectAnswer","setWrongAnswer","navigate","useNavigate","uuid","require","skeletonArr","onSuccess","onError","useQuery","enabled","useGetQuizData","console","log","results","isFetching","refetch","fetchDataQueryHandler","setItem","stringify","e","innerText","target","correct_answer","el","selectors","incorrect_answers","concat","fysOriginal","question","index","alert","clear","commonDisplay","commonH1Tag","sizes","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop"],"sourceRoot":""}